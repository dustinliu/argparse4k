buildscript {
    ext.kotlin_version = '1.2.10'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }
}

apply plugin: 'kotlin'
apply plugin: "jacoco"
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'net.sourceforge.argparse4j:argparse4j:0.8.1'
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.2'
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.2")
    testCompile 'org.mockito:mockito-inline:2.13.0'
    testRuntime 'ch.qos.logback:logback-classic:1.2.3'

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

junitPlatform {
    platformVersion '1.0.2' // optional, defaults to plugin version
    reportsDir file('build/test-results/junit-platform') // this is the default
    selectors {
        packages 'org.dustinl.argparse4k'
    }
}

jacoco {
    toolVersion = "0.7.9"
    reportsDir = file("$buildDir/jacoco/")
}

jacocoTestReport {
    classDirectories = files("${buildDir}/classes")

    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacoco/jacocoHtml")
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
